# Mode21-128KB.cfg
#
# Mode 21 ("HiROM") mapping with 2x64KB banks
# - First bank with "half" code segment at $808000
# David Lindecrantz <optiroc@me.com>

SYMBOLS {
    __STACKSIZE__: type = weak, value = $100;
}

MEMORY {
    ZEROPAGE:       start = $000000, size = $100, define = yes;
    RAM:            start = $000100, size = $1f00 - __STACKSIZE__, define = yes;
    STACK:          start = $002000 - __STACKSIZE__, size = __STACKSIZE__, define = yes;
    RAM7E:          start = $7e2000, size = $e000, define = yes;
    RAM7F:          start = $7f0000, size = $10000, define = yes;

    ROM0L:          start = $c00000, size = $8000, fill = yes, fillval = $ff;
    ROM0H:          start = $c08000, size = $7fb0, fill = yes, fillval = $ff;
    HEADER:         start = $c0ffb0, size = $50, fill = yes, fillval = $ff;
    ROM1:           start = $c10000, size = $10000, fill = yes, fillval = $ff;

    SMPZEROPAGE:    start = $0002, size = $00ee;
    SMPMMIO:        start = $00f0, size = $0010;
    SMPSTACK:       start = $0100, size = $0100;
    SMPRAM:         start = $0200, size = $fdc0;

    ROM0H_RUN:      start = $808000, size = $8000;
}

SEGMENTS {
    CODE:           load = ROM0H, run = ROM0H_RUN, type = ro, start = $808000;
    HEADER:         load = HEADER, type = ro, start = $c0ffb0;
    VECTOR:         load = HEADER, type = ro, start = $c0ffe0;
    RODATA:         load = ROM0L, type = ro, start = $c00000;

    CODE1:          load = ROM1, type = ro, optional = yes;
    RODATA1:        load = ROM1, type = ro, align = $100, optional = yes;

    ZEROPAGE:       load = ZEROPAGE, type = zp,  optional = yes;
    BSS:            load = RAM, type = bss, optional = yes;
    BSS7E:          load = RAM7E, type = bss, optional = yes;
    BSS7F:          load = RAM7F, type = bss, optional = yes;

    SMPZEROPAGE:    load = SMPZEROPAGE, type = zp, optional = yes;
    SMPBSS:         load = SMPRAM, type = bss, optional = yes;
}
